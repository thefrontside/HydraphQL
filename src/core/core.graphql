directive @field(
  at: _DirectiveArgument_!
  default: _DirectiveArgument_
) on FIELD_DEFINITION
directive @discriminates(
  with: _DirectiveArgument_
  opaqueType: String
) on INTERFACE
directive @discriminationAlias(
  value: String!
  type: String!
) repeatable on INTERFACE
directive @implements(interface: String!) on OBJECT | INTERFACE
directive @resolve(at: _DirectiveArgument_, from: String) on FIELD_DEFINITION

scalar _DirectiveArgument_

interface Node {
  id: ID!
}

type Query {
  node(id: ID!): Node
  nodes(ids: [ID!]!): [Node]!
}
